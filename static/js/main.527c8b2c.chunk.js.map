{"version":3,"sources":["API/api.js","components/Common/FormsControls/FormsControls.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Messages/Messages.module.css","components/Profile/MyPosts/MyPosts.module.css","assets/images/preloader.svg","components/Common/Preloader/Preloader.jsx","components/Common/Preloader/Preloader.module.css","components/Messages/DialogItem/DialogItem.module.css","components/Login/Login.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","Redux/users-reducer.js","assets/images/user-default-avatar.png","components/Profile/Profile.module.css","components/Messages/Message/Message.module.css","components/News/News.module.css","components/Music/Music.module.css","reportWebVitals.js","Redux/profile-reducer.js","Redux/messages-reducer.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/validators.js","components/Common/FormsControls/Textarea.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileUserDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","hoc/withAuthRedirect.jsx","components/Messages/MessagesContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Common/FormsControls/Input.js","components/Login/Login.jsx","App.js","index.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhotoToServer","file","formData","FormData","append","saveProfile","profile","authAPI","me","autorization","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","Preloader","props","className","classes","preloaderContainer","preloader","src","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","page","dispatch","a","items","totalCount","count","resultCode","usersReducer","state","action","map","user","id","followed","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","postsData","message","likesCount","setStatus","getUserProfile","profileReducer","newPostText","length","p","postId","photos","SEND_NEW_MESSAGE","dialogesData","name","messagesData","messagesReducer","messageText","newMessageText","SET_USER_DATA","SET_AUTH_ERROR","GET_CAPTCHA_URL_SUCCESS","login","isAuth","authError","captchaUrl","setAuthUserData","payload","getAuthUserData","getCaptchaUrlSuccess","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","auth","app","store","createStore","applyMiddleware","thunkMiddleware","Header","headerWrapper","headerContent","headerFlexContainer","logo","logoSmall","loginBlock","onClick","to","HeaderContainer","this","React","Component","connect","Navbar","nav","item","activeClassName","active","Post","itemContainer","itemAuthor","alt","itemTextContainer","itemText","itemLikes","required","value","undefined","Textarea","input","meta","hasError","touched","error","formControl","NewPostForm","onSubmit","render","handleSubmit","textarea","component","placeholder","validate","button","MyPosts","postsElements","reverse","postsContainer","isOwner","addPost","NewPostText","posts","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","profileStatus","profileStatusEdit","onChange","e","currentTarget","onBlur","autoFocus","Input","ProfileUserDataForm","initialValues","profileUserDataItem","Object","keys","contacts","key","contact","ProfileUserData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","activateEditMode","Contact","ProfileInfo","profileInfoContainer","profileInfoAvatar","image","large","userPhoto","target","files","descriptionBlock","Profile","profileContainer","ProfileContainer","match","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","compose","getState","withRouter","DialogItem","path","Message","AddMessageForm","Messages","dialogesElements","dialog","messagesElements","dialoges","dialogesItems","messages","sendNewMessage","Text","mapStateToPropsForRedirect","sendNewMessageActionCreator","RedirectComponent","News","Music","LoginForm","itemCheckbox","formAuthError","autorizationUser","messageError","loginClasses","container","title","Email","Password","RememberMe","UsersContainer","lazy","App","initializeApp","MessagesContainer","fallback","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527c8b2c.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n   headers: {\r\n      \"API-KEY\": \"201df3f1-e0c5-420b-8d56-d790364daf70\"\r\n   }\r\n})\r\n\r\nexport const usersAPI = {\r\n   getUsers(currentPage = 1, pageSize = 10) {\r\n      return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n         .then(response => {\r\n            return response.data;\r\n         })\r\n   },\r\n   follow(userId) {\r\n      return instance.post(`follow/${userId}`);\r\n   },\r\n   unfollow(userId) {\r\n      return instance.delete(`follow/${userId}`);\r\n   }\r\n}\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/` + userId);\r\n   },\r\n   getStatus(userId) {\r\n      return instance.get(`profile/status/` + userId);\r\n   },\r\n   updateStatus(status) {\r\n      return instance.put(`profile/status`, { status: status });\r\n   },\r\n   savePhotoToServer(file) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", file);\r\n      return instance.put(`profile/photo`, formData);\r\n   },\r\n   saveProfile(profile) {\r\n      return instance.put(`profile`, profile);\r\n   }\r\n}\r\n\r\nexport const authAPI = {\r\n   me() {\r\n      return instance.get(`auth/me`);\r\n   },\r\n   autorization(email, password, rememberMe = false, captcha = null) {\r\n      return instance.post(`auth/login/`, {email, password, rememberMe, captcha});\r\n   },\r\n   logout() {\r\n      return instance.delete(`auth/login/`);\r\n   }\r\n}\r\n\r\nexport const securityAPI = {\r\n   getCaptchaUrl() {\r\n      return instance.get(`security/get-captcha-url`);\r\n   }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1yYoe\",\"error\":\"FormsControls_error__1VThZ\",\"formAuthError\":\"FormsControls_formAuthError__1YkUl\",\"item\":\"FormsControls_item__3-Vs5\",\"itemCheckbox\":\"FormsControls_itemCheckbox__2TiWR\",\"button\":\"FormsControls_button__39l4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1CLmV\",\"item\":\"Navbar_item__3A-XE\",\"active\":\"Navbar_active__3ZTVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__3sRyr\",\"headerContent\":\"Header_headerContent__1azkt\",\"headerFlexContainer\":\"Header_headerFlexContainer__3pLg5\",\"logo\":\"Header_logo__3hGQT\",\"logoSmall\":\"Header_logoSmall__2ZBhp\",\"loginBlock\":\"Header_loginBlock__XboRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Post_itemContainer__3em3Y\",\"itemAuthor\":\"Post_itemAuthor___5BC1\",\"itemTextContainer\":\"Post_itemTextContainer__3gr_Q\",\"itemText\":\"Post_itemText__1Gs8t\",\"itemLikes\":\"Post_itemLikes__2TboS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialoges\":\"Messages_dialoges__2fN8o\",\"dialogesItems\":\"Messages_dialogesItems__vgMyj\",\"messages\":\"Messages_messages__2WPtS\",\"textarea\":\"Messages_textarea__106WZ\",\"button\":\"Messages_button__1F2f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__3kTqd\",\"textarea\":\"MyPosts_textarea__qQoaY\",\"button\":\"MyPosts_button__2T0mn\",\"posts\":\"MyPosts_posts__2ZylJ\"};","export default __webpack_public_path__ + \"static/media/preloader.3eb5beb7.svg\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\nimport classes from './Preloader.module.css'\r\n\r\nconst Preloader = (props) => {\r\n   return (\r\n      <div className={classes.preloaderContainer}>\r\n         <div className={classes.preloader}>\r\n            <img src={preloader}></img>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__gpqoT\",\"preloader\":\"Preloader_preloader___0zQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1KH-_\",\"active\":\"DialogItem_active__2cQxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__PsUg5\",\"title\":\"Login_title__XxVI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__F8CKq\",\"profileInfoAvatar\":\"ProfileInfo_profileInfoAvatar__ToA4C\",\"profileStatus\":\"ProfileInfo_profileStatus__18x-d\",\"profileStatusEdit\":\"ProfileInfo_profileStatusEdit__N0CwO\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__33Yf_\",\"image\":\"ProfileInfo_image__1cKfV\",\"profileUserDataItem\":\"ProfileInfo_profileUserDataItem__3ilhc\",\"arrow\":\"ProfileInfo_arrow__7gfHJ\",\"contactsBlock\":\"ProfileInfo_contactsBlock__3iMBj\",\"contact\":\"ProfileInfo_contact__3RBCA\",\"button\":\"ProfileInfo_button__39aHD\"};","import { usersAPI } from './../API/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n   users: [],\r\n   pageSize: 20,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: false,\r\n   followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(user => {\r\n               if (user.id === action.userId) {\r\n                  return { ...user, followed: true }\r\n               }\r\n               return user;\r\n            })\r\n         };\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: state.users.map(user => {\r\n               if (user.id === action.userId) {\r\n                  return { ...user, followed: false }\r\n               }\r\n               return user;\r\n            })\r\n         };\r\n      case SET_USERS: {\r\n         return { ...state, users: action.users }\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return { ...state, currentPage: action.currentPage }\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return { ...state, totalUsersCount: action.count }\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return { ...state, isFetching: action.isFetching }\r\n      }\r\n      case TOGGLE_FOLLOWING_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id != action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n   return async (dispatch) => {\r\n      dispatch(toggleIsFetching(true));\r\n\r\n      let data = await usersAPI.getUsers(page, pageSize);\r\n         dispatch(toggleIsFetching(false));\r\n         dispatch(setUsers(data.items));\r\n         dispatch(setTotalUsersCount(data.totalCount));\r\n   }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n   return async (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n\r\n      let response = await usersAPI.follow(userId);\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n   }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n   return async (dispatch) => {\r\n      dispatch(toggleFollowingProgress(true, userId));\r\n\r\n      let response = await usersAPI.unfollow(userId)\r\n         if (response.data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n         }\r\n         dispatch(toggleFollowingProgress(false, userId));\r\n   }\r\n}\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user-default-avatar.fbfe03c2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__I9XKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3076P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"News_item__12zP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Music_item__2W7VV\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { profileAPI } from './../API/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n   profile: null,\r\n   postsData: [\r\n      { id: 1, message: \"It's my first post\", likesCount: 2 },\r\n      { id: 2, message: \"It's my second post\", likesCount: 223 },\r\n      { id: 3, message: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, \r\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \r\n      nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in \r\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \r\n      deserunt mollit anim id est laborum.`, likesCount: 123 }\r\n   ],\r\n   status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            newPostText: '',\r\n            postsData: [...state.postsData, \r\n               { id: (state.postsData.length + 1), message: action.newPostText, likesCount: 0 }],\r\n         };\r\n      case SET_USER_PROFILE:\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      case SET_STATUS:\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      case DELETE_POST:\r\n         return {\r\n            ...state,\r\n            postsData: state.postsData.filter(p => p.id != action.postId)\r\n         }\r\n      case SAVE_PHOTO_SUCCESS:\r\n         return {\r\n            ...state,\r\n            profile: { ...state.profile, photos: action.photos }\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n   return { type: ADD_POST, newPostText }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n   return { type: DELETE_POST, postId }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n   return { type: SET_USER_PROFILE, profile }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n   return { type: SET_STATUS, status }\r\n}\r\nexport const savePhotoToServerSuccess = (photos) => {\r\n   return { type: SAVE_PHOTO_SUCCESS, photos }\r\n}\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n   let response = await profileAPI.getProfile(userId);\r\n   dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n   let response = await profileAPI.getStatus(userId);\r\n   dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n   let response = await profileAPI.updateStatus(status);\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status));\r\n   }\r\n}\r\n\r\nexport const savePhotoToServer = (file) => async (dispatch) => {\r\n   let response = await profileAPI.savePhotoToServer(file);\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(savePhotoToServerSuccess(response.data.data.photos));\r\n   }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n   let userId = getState().auth.userId;\r\n   let response = await profileAPI.saveProfile(profile);\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(getUserProfile(userId));\r\n   } \r\n}\r\n\r\nexport default profileReducer;","const SEND_NEW_MESSAGE = 'SEND-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogesData: [\r\n      { id: 1, name: 'Username 1' },\r\n      { id: 2, name: 'Username 2' },\r\n      { id: 3, name: 'Username 3' },\r\n      { id: 4, name: 'Username 4' },\r\n      { id: 5, name: 'Username 5' }\r\n   ],\r\n   messagesData: [\r\n      { id: 1, message: \"Hi\" },\r\n      { id: 2, message: \"How are you?\" },\r\n      { id: 3, message: \"Yo\" }\r\n   ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SEND_NEW_MESSAGE:\r\n         let messageText = action.newMessageText;\r\n         \r\n         return {\r\n            ...state,\r\n            messagesData: [...state.messagesData, \r\n               { id: (state.messagesData.length + 1), message: messageText }]\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const sendNewMessageActionCreator = (newMessageText) => {\r\n   return { type: SEND_NEW_MESSAGE, newMessageText}\r\n}\r\n\r\n\r\nexport default messagesReducer;","import { authAPI, securityAPI } from './../API/api';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_AUTH_ERROR = 'SET_AUTH_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n   userId: null,\r\n   email: null,\r\n   login: null,\r\n   isAuth: false,\r\n   authError: '',\r\n   captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n      case GET_CAPTCHA_URL_SUCCESS:\r\n         return {\r\n            ...state,\r\n            ...action.payload\r\n         }\r\n      case SET_AUTH_ERROR:\r\n         return {\r\n            ...state,\r\n            authError: action.authError\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, authError) => ({\r\n   type: SET_USER_DATA,\r\n   payload: { userId, email, login, isAuth, authError }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n   let response = await authAPI.me();\r\n\r\n   if (response.data.resultCode === 0) {\r\n      let { id, login, email } = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true, null));\r\n   }\r\n}\r\nexport const setAuthError = (authError) => ({\r\n   type: SET_AUTH_ERROR,\r\n   authError\r\n})\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n   type: GET_CAPTCHA_URL_SUCCESS,\r\n   payload: { captchaUrl }\r\n});\r\n\r\nexport const autorizationUser = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n   let response = await authAPI.autorization(email, password, rememberMe, captcha);\r\n\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData());\r\n   } else {\r\n      if (response.data.resultCode === 10) {\r\n         dispatch(getCaptchaUrl());\r\n      }\r\n\r\n      let messageError = response.data.messages.length > 0\r\n         ? response.data.messages[0] : \"Some Error\";\r\n      dispatch( setAuthError(messageError) )    \r\n   }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout();\r\n\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false, null));\r\n   }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n   let response = await securityAPI.getCaptchaUrl();\r\n   let captchaUrl = response.data.url;\r\n\r\n   dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n   initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n   switch(action.type) {\r\n      case INITIALIZED_SUCCESS:\r\n         return {\r\n            ...state,\r\n            initialized: true\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type:INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n\r\n   promise.then(() => {\r\n      dispatch(initializedSuccess())\r\n   });  \r\n}\r\n\r\nexport default appReducer;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport messagesReducer from './messages-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   messagesPage: messagesReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n   return (\r\n      <header className={classes.headerWrapper}>\r\n         <div className={classes.headerContent}>\r\n            <div className={classes.headerFlexContainer}>\r\n               <div className={classes.logo}>React Social Network</div>\r\n               <div className={classes.logoSmall}>RSN</div>\r\n               <div className={classes.loginBlock}>\r\n                  {props.isAuth\r\n                     ? <div><button onClick={props.logout}>Log out</button></div>\r\n                     : <NavLink to='/login'>Login</NavLink>}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport { logout } from './../../Redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout} )(HeaderContainer);","import { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n   return (\r\n      <nav className={classes.nav}>\r\n         <div className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n            <NavLink to=\"/messages\" activeClassName={classes.active}>Messages</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n            <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n            <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n            <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n         </div>\r\n      </nav>\r\n   );\r\n}\r\n\r\nexport default Navbar;","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={classes.itemContainer}>\r\n         <div className={classes.itemAuthor}>\r\n            <img src=\"https://i.guim.co.uk/img/media/fe1e34da640c5c56ed16f76ce6f994fa9343d09d/0_174_3408_2046/master/3408.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=0d3f33fb6aa6e0154b7713a00454c83d\" alt=\"\"/>\r\n            <div>\r\n               Username\r\n            </div>\r\n         </div>\r\n         <div className={classes.itemTextContainer}>\r\n            <div className={classes.itemText}>\r\n               {props.message}\r\n            </div>\r\n            <div className={classes.itemLikes}>\r\n               <span>Likes {props.likesCount}</span> \r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Post;","export const required = value => (value ? undefined : 'Field is required');\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if(value && value.length > maxLength ) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n}","import React from 'react';\r\nimport classes from './FormsControls.module.css';\r\n\r\nconst Textarea = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n         <div>\r\n            <textarea {...input} {...props}/>\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Textarea;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {required} from './../../../utils/validators/validators';\r\nimport Textarea from './../../Common/FormsControls/Textarea';\r\n\r\nconst NewPostForm = (props) => {\r\n   return <Form \r\n      onSubmit={props.onSubmit}\r\n      render = {({ handleSubmit }) => (\r\n      <form onSubmit={handleSubmit}>\r\n         <div className={classes.textarea}>\r\n            <Field name=\"NewPostText\" component={Textarea} placeholder=\"What's new?\" \r\n               validate={required} />\r\n         </div>\r\n         <div>\r\n            <button className={classes.button} type=\"submit\" >Add post</button>\r\n         </div>\r\n      </form>\r\n      )}\r\n   />\r\n}\r\n\r\nconst MyPosts = (props) => {\r\n   let postsElements = props.postsData\r\n      .map((post) => <Post key={post.id}\r\n         message={post.message} \r\n         likesCount={post.likesCount} />).reverse();\r\n\r\n   let onSubmit = (value) => {\r\n      props.addPost(value.NewPostText)\r\n      value.NewPostText = null;\r\n   };\r\n\r\n   return (\r\n   <div className={classes.postsContainer}>\r\n      { props.isOwner \r\n         ? <h2>My posts</h2>\r\n         : <h2>Posts</h2> \r\n      }\r\n      { props.isOwner \r\n         ? <NewPostForm onSubmit={onSubmit}/>\r\n         : undefined\r\n      }\r\n      <div className={classes.posts}>\r\n         {postsElements}\r\n      </div>\r\n   </div>\r\n   );\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport {\r\n   addPostActionCreator\r\n} from '../../../Redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      postsData: state.profilePage.postsData,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (newPostText) => {\r\n         dispatch(addPostActionCreator(newPostText));\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect( () => {\r\n      setStatus(props.status)\r\n   }, [props.status] );\r\n\r\n   const activateEditMode = () => {\r\n      if (props.isOwner === true) {\r\n         setEditMode(true);\r\n      }\r\n   }\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   }\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         { !editMode &&\r\n            <div className={classes.profileStatus}>\r\n               <span onClick={activateEditMode}>{props.status || \"Status\"}</span>\r\n            </div>\r\n         }\r\n         { editMode  &&\r\n            <div className={classes.profileStatusEdit}>\r\n               <textarea \r\n               onChange={onStatusChange} \r\n               onBlur={deactivateEditMode} \r\n               autoFocus={true}\r\n               value={status}></textarea>\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import classes from './../ProfileInfo/ProfileInfo.module.css';\r\nimport React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\nconst ProfileUserDataForm = (props) => (\r\n   <Form\r\n      onSubmit={props.onSubmit}\r\n      initialValues={props.profile}\r\n      render={({ handleSubmit }) => (\r\n         <form onSubmit={handleSubmit}>\r\n            <div className={classes.profileUserDataItem}>\r\n               Full name: <Field name=\"fullName\" component={Input} placeholder=\"Full name\" />\r\n            </div>\r\n            <div className={classes.profileUserDataItem}>\r\n               Looking for a job: <Field name=\"lookingForAJob\" component=\"input\" type=\"checkbox\" />\r\n            </div>\r\n            <div className={classes.profileUserDataItem}>\r\n               My professional skills:\r\n                  <Field name=\"lookingForAJobDescription\"\r\n                  component={Textarea}\r\n                  placeholder=\"Describe your skills\" />\r\n            </div>\r\n            <div className={classes.profileUserDataItem}>\r\n               About me:\r\n                  <Field name=\"aboutMe\"\r\n                  component={Textarea}\r\n                  placeholder=\"Information about you\" />\r\n            </div>\r\n            <div className={classes.profileUserDataItem}>\r\n               Contacts: {Object.keys(props.profile.contacts).map(key => {\r\n                  return <div key={key} className={classes.contact}>\r\n                     {key}: \r\n                     <div>\r\n                        <Field name={\"contacts.\" + key} component=\"input\" placeholder={key} />\r\n                     </div>\r\n                  </div>\r\n               })}\r\n            </div>\r\n            <div>\r\n               <button className={classes.button}type=\"submit\">Save</button>\r\n            </div>\r\n         </form>\r\n      )}\r\n   />\r\n)\r\n\r\nconst Input = ({ input, ...props }) => {\r\n   return (\r\n      <div>\r\n         <input {...input} {...props} />\r\n      </div>\r\n   )\r\n}\r\n\r\nconst Textarea = ({ input, ...props }) => {\r\n   return (\r\n      <div>\r\n         <textarea {...input} {...props} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileUserDataForm;","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from './../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from './../../../assets/images/user-default-avatar.png';\r\nimport ProfileUserDataForm from './ProfileUserDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n\r\n   const onSubmit = (formData) => {\r\n      setEditMode(false);\r\n      props.saveProfile(formData);\r\n   }\r\n   \r\n   if (!props.profile) {\r\n      return <Preloader />\r\n   }\r\n   let onMainPhotoSelected = (e) => {\r\n      props.savePhotoToServer(e.target.files[0]);\r\n   }\r\n   return (\r\n      <div className={classes.profileInfoContainer}>\r\n         <div className={classes.profileInfoAvatar}>\r\n            <img className={classes.image} src={props.profile.photos.large || userPhoto} alt=\"\" />\r\n            {props.isOwner &&\r\n               <div>\r\n                  <span>Change avatar</span>\r\n                  <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n               </div>\r\n            }\r\n         </div>\r\n         <div className={classes.descriptionBlock}>\r\n            <ProfileStatusWithHooks\r\n               status={props.status}\r\n               updateStatus={props.updateStatus}\r\n               isOwner={props.isOwner} />\r\n            {editMode\r\n               ? <ProfileUserDataForm\r\n                  profile={props.profile}\r\n                  isOwner={props.isOwner}\r\n                  onSubmit={onSubmit} />\r\n               : <ProfileUserData\r\n                  profile={props.profile}\r\n                  isOwner={props.isOwner}\r\n                  activateEditMode={() => { setEditMode(true) }} />\r\n            }\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nconst ProfileUserData = (props) => {\r\n   return (\r\n      <div>\r\n         <div className={classes.profileUserDataItem}><b>PERSONAL INFORMATION:</b></div>\r\n         <div className={classes.profileUserDataItem}>\r\n            <b>Full name: </b>{props.profile.fullName}\r\n         </div>\r\n         <div className={classes.profileUserDataItem}>\r\n            <b>Looking for a job: </b>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n         </div>\r\n         {props.profile.lookingForAJob &&\r\n            <div className={classes.profileUserDataItem}>\r\n               <b>My professional skills: </b>{props.profile.lookingForAJobDescription}\r\n            </div>\r\n         }\r\n         <div className={classes.profileUserDataItem}>\r\n            <b>About me: </b>{props.profile.aboutMe}\r\n         </div>\r\n         <div className={classes.profileUserDataItem}>\r\n            <b>Contacts: </b>\r\n               {Object.keys(props.profile.contacts).map(key => {\r\n                  return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n               })}\r\n            \r\n         </div>\r\n         {\r\n            props.isOwner &&\r\n            <div>\r\n               <button className={classes.button}onClick={props.activateEditMode}>Edit</button>\r\n            </div>\r\n         }\r\n      </div >\r\n   )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n   return <div className={classes.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import classes from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n   return (\r\n      <section className={classes.profileContainer}>\r\n         <ProfileInfo \r\n            isOwner={props.isOwner} \r\n            profile={props.profile} \r\n            status={props.status} \r\n            updateStatus={props.updateStatus} \r\n            savePhotoToServer={props.savePhotoToServer}\r\n            saveProfile={props.saveProfile}/>\r\n         <MyPostsContainer isOwner={props.isOwner} />\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport { getUserProfile, \r\n         getStatus, \r\n         updateStatus, \r\n         savePhotoToServer, \r\n         saveProfile\r\n       } from './../../Redux/profile-reducer';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n   \r\n   refreshProfile() {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n         if(!userId) {\r\n            this.props.history.push('/login');\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.refreshProfile();\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if (this.props.match.params.userId != prevProps.match.params.userId ){\r\n         this.refreshProfile();\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n         isOwner={!this.props.match.params.userId} \r\n         profile={this.props.profile}\r\n         status={this.props.status} \r\n         updateStatus={this.props.updateStatus}\r\n         savePhotoToServer={this.props.savePhotoToServer}\r\n         saveProfile={this.props.saveProfile} />\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   isAuth: state.auth.isAuth,\r\n   authorizedUserId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhotoToServer, saveProfile}),\r\n   withRouter,\r\n)(ProfileContainer);","import classes from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n   let path = \"/messages/\" + props.id;\r\n\r\n   return (\r\n      <div className={classes.item}>\r\n         <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DialogItem;","import classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={classes.message}>\r\n         {props.message}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Messages.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Form, Field } from 'react-final-form';\r\nimport Textarea from './../Common/FormsControls/Textarea';\r\nimport {required} from './../../utils/validators/validators';\r\n\r\nconst AddMessageForm = (props) => {\r\n   return <Form\r\n      onSubmit={props.onSubmit}\r\n      render={({ handleSubmit }) => (\r\n         <form onSubmit={handleSubmit}>\r\n            <div>\r\n               <Field className={classes.textarea} name=\"Text\" component={Textarea} placeholder=\"Enter your message\" \r\n                  validate={required} />\r\n            </div>\r\n            <div>\r\n               <button className={classes.button} type=\"submit\">Send</button>\r\n            </div>\r\n         </form>\r\n      )}\r\n   />\r\n}\r\n\r\nconst Messages = (props) => {\r\n   let dialogesElements = props.dialogesData\r\n      .map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />);\r\n\r\n   let messagesElements = props.messagesData\r\n      .map(message => <Message key={message.id} message={message.message} />);\r\n\r\n   let onSubmit = (value) => {\r\n      props.sendNewMessage(value.Text);\r\n      value.Text = null;\r\n   };\r\n\r\n   return (\r\n      <div className={classes.dialoges}>\r\n         <div className={classes.dialogesItems}>\r\n            {dialogesElements}\r\n         </div>\r\n         <div className={classes.messages}>\r\n            {messagesElements}\r\n            <div>\r\n               <AddMessageForm onSubmit={onSubmit}/>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import Messages from './Messages';\r\nimport {\r\n   sendNewMessageActionCreator\r\n} from '../../Redux/messages-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogesData: state.messagesPage.dialogesData,\r\n      messagesData: state.messagesPage.messagesData,\r\n      newMessageText: state.messagesPage.newMessageText,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendNewMessage: (newMessageText) => {\r\n         dispatch(sendNewMessageActionCreator(newMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Messages);","import classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n   return (\r\n      <div className={classes.item}>\r\n         News\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default News;","import classes from './Music.module.css';\r\n\r\nconst Music = () => {\r\n   return (\r\n      <div className={classes.item}>\r\n         Music\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './FormsControls.module.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n         <div>\r\n            <input {...input} {...props}/>\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { autorizationUser } from './../../Redux/auth-reducer';\r\nimport Input from './../Common/FormsControls/Input';\r\nimport { required } from './../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from './../Common/FormsControls/FormsControls.module.css';\r\nimport loginClasses from './Login.module.css';\r\n\r\n\r\n\r\nconst LoginForm = (props) => (\r\n   <Form\r\n      onSubmit={props.onSubmit}\r\n      render={({ handleSubmit }) => (\r\n         <form onSubmit={handleSubmit}>\r\n            <div>\r\n               Данные для входа в тестовый аккаунт:\r\n               <p>Email: free@samuraijs.com</p>\r\n               <p>Password: free</p>\r\n            </div>\r\n            <div className={classes.item}>\r\n               Email: <Field name=\"Email\" component={Input} placeholder=\"Email\" \r\n                  validate={required} />\r\n            </div>\r\n            <div className={classes.item}>\r\n               Password: <Field name=\"Password\" component={Input} type=\"password\" placeholder=\"Password\"\r\n                  validate={required} />\r\n            </div>\r\n            <div className={classes.itemCheckbox}>\r\n               <Field name=\"RememberMe\" component={Input} type=\"checkbox\" /> <span>Remember me</span>\r\n            </div>\r\n            {(props.authError)\r\n               ? <span className={classes.formAuthError}> {props.authError} </span>\r\n               : undefined\r\n            }\r\n            { props.captchaUrl && <div><img src={props.captchaUrl}/></div>}\r\n            { props.captchaUrl && \r\n               <Field name=\"captcha\" component={Input} placeholder=\"Symbols from image\"  validate={required}/>}\r\n            <div>\r\n               <button className={classes.button} type=\"submit\" >Sign in</button>\r\n            </div>\r\n         </form>\r\n      )}\r\n   />\r\n)\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.autorizationUser(\r\n         formData.Email, \r\n         formData.Password, \r\n         formData.RememberMe, \r\n         formData.captcha\r\n      );\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Redirect to={\"/profile\"} />\r\n   }\r\n\r\n   return <div className={loginClasses.container}>\r\n      <div className={loginClasses.title}>Authorization</div>\r\n      <LoginForm \r\n         onSubmit={onSubmit} \r\n         authError={props.authError}\r\n         captchaUrl={props.captchaUrl} />\r\n   </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   authError: state.auth.authError,\r\n   captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { autorizationUser })(Login);","import React, { Suspense } from 'react';\nimport './App.css';\nimport { HashRouter, Redirect, Route } from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport MessagesContainer from './components/Messages/MessagesContainer';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './Redux/app-reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\n\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp();\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader />\n\t\t}\n\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t\t<HeaderContainer />\n\t\t\t\t\t<div className=\"app-content-wrapper\">\n\t\t\t\t\t\t<div className=\"app-content-grid\">\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t\t<div className=\"app-content\">\n\t\t\t\t\t\t\t\t<div className=\"app-content-container\">\n\t\t\t\t\t\t\t\t\t<Route path='/'\n\t\t\t\t\t\t\t\t\t\trender={() => <Redirect to={\"/profile\"} />} />\n\t\t\t\t\t\t\t\t\t<Route path='/messages'\n\t\t\t\t\t\t\t\t\t\trender={() => <MessagesContainer />} />\n\t\t\t\t\t\t\t\t\t<Route path='/profile/:userId?'\n\t\t\t\t\t\t\t\t\t\trender={() => <ProfileContainer />} />\n\t\t\t\t\t\t\t\t\t<Route path='/users'\n\t\t\t\t\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t\t\t\t\t\t\t\t\t<UsersContainer />\n\t\t\t\t\t\t\t\t\t\t\t</Suspense>} />\n\t\t\t\t\t\t\t\t\t<Route path='/news' render={() => <News />} />\n\t\t\t\t\t\t\t\t\t<Route path='/music' render={() => <Music />} />\n\t\t\t\t\t\t\t\t\t<Route path='/login' render={() => <Login />} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, { initializeApp })(App);","import reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}